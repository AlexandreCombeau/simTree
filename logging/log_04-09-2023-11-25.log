INFO 2023-09-04 11:25:11,456 - Start main
INFO 2023-09-04 11:25:11,456 - Start prop filtering
INFO 2023-09-04 11:25:11,456 - Start mapped key
INFO 2023-09-04 11:25:11,472 - Start not empty keys
INFO 2023-09-04 11:25:11,472 - Query for key :['haschild', 'wasbornondate'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haschild> as ?p1). bind(<http://simGen/actor/wasbornondate> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:22,066 - Start main
INFO 2023-09-04 11:45:22,067 - Start prop filtering
INFO 2023-09-04 11:45:22,067 - Start mapped key
INFO 2023-09-04 11:45:22,079 - Start not empty keys
INFO 2023-09-04 11:45:22,079 - Query for key :['haschild', 'wasbornondate'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haschild> as ?p1). bind(<http://simGen/actor/wasbornondate> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:22,743 - Query for key :['wasbornondate', 'ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/wasbornondate> as ?p1). bind(<http://simGen/actor/ismarriedto-inv> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:22,788 - Query for key :['wasbornondate', 'directed'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/wasbornondate> as ?p1). bind(<http://simGen/actor/directed> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:22,928 - Query for key :['diedondate', 'directed'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). bind(<http://simGen/actor/directed> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:23,017 - Query for key :['haschild', 'directed'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haschild> as ?p1). bind(<http://simGen/actor/directed> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:23,061 - Query for key :['ismarriedto', 'influences'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/ismarriedto> as ?p1). bind(<http://simGen/actor/influences> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:23,087 - Query for key :['wasbornondate', 'influences'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/wasbornondate> as ?p1). bind(<http://simGen/actor/influences> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:23,104 - Query for key :['influences', 'ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/influences> as ?p1). bind(<http://simGen/actor/ismarriedto-inv> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:23,121 - Query for key :['diedondate', 'skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:23,562 - Query for key :['diedondate', 'influences'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). bind(<http://simGen/actor/influences> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:23,578 - Query for key :['diedondate', 'created'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). bind(<http://simGen/actor/created> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:23,668 - Query for key :['haschild', 'ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haschild> as ?p1). bind(<http://simGen/actor/ismarriedto-inv> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:23,680 - Query for key :['wasbornonyear', 'created', 'diedin'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/wasbornonyear> as ?p1). bind(<http://simGen/actor/created> as ?p2). bind(<http://simGen/actor/diedin> as ?p3). ?e ?p1 ?v1. ?e ?p2 ?v2. ?e ?p3 ?v3.  } limit 100000
INFO 2023-09-04 11:45:23,798 - Query for key :['diedondate', 'ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). bind(<http://simGen/actor/ismarriedto-inv> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:23,815 - Query for key :['directed', 'influences'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/directed> as ?p1). bind(<http://simGen/actor/influences> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:23,830 - Query for key :['influences', 'skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/influences> as ?p1). bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:23,984 - Query for key :['diedonyear', 'ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedonyear> as ?p1). bind(<http://simGen/actor/ismarriedto-inv> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:24,004 - Query for key :['ismarriedto-inv', 'skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/ismarriedto-inv> as ?p1). bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:24,161 - Query for key :['iscitizenof', 'ismarriedto'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/iscitizenof> as ?p1). bind(<http://simGen/actor/ismarriedto> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:24,177 - Query for key :['wasbornondate', 'ismarriedto'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/wasbornondate> as ?p1). bind(<http://simGen/actor/ismarriedto> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:24,221 - Query for key :['haschild', 'influences'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haschild> as ?p1). bind(<http://simGen/actor/influences> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:24,227 - Query for key :['diedin', 'skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedin> as ?p1). bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:24,385 - Query for key :['created', 'skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/created> as ?p1). bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:24,553 - Query for key :['iscitizenof', 'diedonyear', 'actedin'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/iscitizenof> as ?p1). bind(<http://simGen/actor/diedonyear> as ?p2). bind(<http://simGen/actor/actedin> as ?p3). ?e ?p1 ?v1. ?e ?p2 ?v2. ?e ?p3 ?v3.  } limit 100000
INFO 2023-09-04 11:45:24,916 - Query for key :['diedondate', 'haschild'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). bind(<http://simGen/actor/haschild> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:24,940 - Query for key :['haschild', 'skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haschild> as ?p1). bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:25,076 - Query for key :['iscitizenof', 'ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/iscitizenof> as ?p1). bind(<http://simGen/actor/ismarriedto-inv> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:45:25,087 - Query for key :['iscitizenof', 'wasbornin', 'wasbornonyear'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/iscitizenof> as ?p1). bind(<http://simGen/actor/wasbornin> as ?p2). bind(<http://simGen/actor/wasbornonyear> as ?p3). ?e ?p1 ?v1. ?e ?p2 ?v2. ?e ?p3 ?v3.  } limit 100000
INFO 2023-09-04 11:45:25,299 - Query for key :['directed'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/directed> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:45:25,313 - Query for key :['ismarriedto'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/ismarriedto> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:45:25,329 - Query for key :['created'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/created> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:45:25,360 - Query for key :['actedin'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/actedin> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:45:25,440 - Query for key :['ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/ismarriedto-inv> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:45:25,440 - Query for key :['wasbornondate'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/wasbornondate> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:45:25,471 - Query for key :['diedin'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedin> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:45:25,490 - Query for key :['haschild'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haschild> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:45:25,501 - Query for key :['skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:45:25,566 - Query for key :['influences'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/influences> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:45:25,572 - Query for key :['haswonprize'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haswonprize> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:45:25,598 - Query for key :['diedonyear'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedonyear> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:45:25,622 - Query for key :['diedondate'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:45:25,636 - valid key list : [['haschild', 'wasbornondate'], ['wasbornondate', 'ismarriedto-inv'], ['wasbornondate', 'directed'], ['diedondate', 'directed'], ['haschild', 'directed'], ['ismarriedto', 'influences'], ['wasbornondate', 'influences'], ['influences', 'ismarriedto-inv'], ['diedondate', 'skos:preflabel'], ['diedondate', 'influences'], ['diedondate', 'created'], ['haschild', 'ismarriedto-inv'], ['wasbornonyear', 'created', 'diedin'], ['diedondate', 'ismarriedto-inv'], ['directed', 'influences'], ['influences', 'skos:preflabel'], ['diedonyear', 'ismarriedto-inv'], ['ismarriedto-inv', 'skos:preflabel'], ['iscitizenof', 'ismarriedto'], ['wasbornondate', 'ismarriedto'], ['haschild', 'influences'], ['diedin', 'skos:preflabel'], ['created', 'skos:preflabel'], ['iscitizenof', 'diedonyear', 'actedin'], ['diedondate', 'haschild'], ['haschild', 'skos:preflabel'], ['iscitizenof', 'ismarriedto-inv'], ['iscitizenof', 'wasbornin', 'wasbornonyear'], ['directed'], ['ismarriedto'], ['created'], ['actedin'], ['ismarriedto-inv'], ['wasbornondate'], ['diedin'], ['haschild'], ['skos:preflabel'], ['influences'], ['haswonprize'], ['diedonyear'], ['diedondate']]
INFO 2023-09-04 11:45:25,636 - Unique key list find : ['haschild', 'wasbornondate', 'ismarriedto-inv', 'directed', 'diedondate', 'ismarriedto', 'influences', 'skos:preflabel', 'created', 'wasbornonyear', 'diedin', 'diedonyear', 'iscitizenof', 'actedin', 'wasbornin', 'haswonprize']
INFO 2023-09-04 11:45:40,758 - Start test loop
INFO 2023-09-04 11:59:10,545 - Start main
INFO 2023-09-04 11:59:10,545 - Start prop filtering
INFO 2023-09-04 11:59:10,546 - Start mapped key
INFO 2023-09-04 11:59:10,547 - Start not empty keys
INFO 2023-09-04 11:59:10,547 - Query for key :['haschild', 'wasbornondate'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haschild> as ?p1). bind(<http://simGen/actor/wasbornondate> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:10,670 - Query for key :['wasbornondate', 'ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/wasbornondate> as ?p1). bind(<http://simGen/actor/ismarriedto-inv> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:10,689 - Query for key :['wasbornondate', 'directed'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/wasbornondate> as ?p1). bind(<http://simGen/actor/directed> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:10,742 - Query for key :['diedondate', 'directed'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). bind(<http://simGen/actor/directed> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:10,783 - Query for key :['haschild', 'directed'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haschild> as ?p1). bind(<http://simGen/actor/directed> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:10,823 - Query for key :['ismarriedto', 'influences'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/ismarriedto> as ?p1). bind(<http://simGen/actor/influences> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:10,835 - Query for key :['wasbornondate', 'influences'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/wasbornondate> as ?p1). bind(<http://simGen/actor/influences> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:10,847 - Query for key :['influences', 'ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/influences> as ?p1). bind(<http://simGen/actor/ismarriedto-inv> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:10,858 - Query for key :['diedondate', 'skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,018 - Query for key :['diedondate', 'influences'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). bind(<http://simGen/actor/influences> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,026 - Query for key :['diedondate', 'created'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). bind(<http://simGen/actor/created> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,074 - Query for key :['haschild', 'ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haschild> as ?p1). bind(<http://simGen/actor/ismarriedto-inv> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,083 - Query for key :['wasbornonyear', 'created', 'diedin'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/wasbornonyear> as ?p1). bind(<http://simGen/actor/created> as ?p2). bind(<http://simGen/actor/diedin> as ?p3). ?e ?p1 ?v1. ?e ?p2 ?v2. ?e ?p3 ?v3.  } limit 100000
INFO 2023-09-04 11:59:11,120 - Query for key :['diedondate', 'ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). bind(<http://simGen/actor/ismarriedto-inv> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,131 - Query for key :['directed', 'influences'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/directed> as ?p1). bind(<http://simGen/actor/influences> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,142 - Query for key :['influences', 'skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/influences> as ?p1). bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,277 - Query for key :['diedonyear', 'ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedonyear> as ?p1). bind(<http://simGen/actor/ismarriedto-inv> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,288 - Query for key :['ismarriedto-inv', 'skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/ismarriedto-inv> as ?p1). bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,434 - Query for key :['iscitizenof', 'ismarriedto'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/iscitizenof> as ?p1). bind(<http://simGen/actor/ismarriedto> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,454 - Query for key :['wasbornondate', 'ismarriedto'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/wasbornondate> as ?p1). bind(<http://simGen/actor/ismarriedto> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,483 - Query for key :['haschild', 'influences'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haschild> as ?p1). bind(<http://simGen/actor/influences> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,490 - Query for key :['diedin', 'skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedin> as ?p1). bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,637 - Query for key :['created', 'skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/created> as ?p1). bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:11,818 - Query for key :['iscitizenof', 'diedonyear', 'actedin'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/iscitizenof> as ?p1). bind(<http://simGen/actor/diedonyear> as ?p2). bind(<http://simGen/actor/actedin> as ?p3). ?e ?p1 ?v1. ?e ?p2 ?v2. ?e ?p3 ?v3.  } limit 100000
INFO 2023-09-04 11:59:12,014 - Query for key :['diedondate', 'haschild'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). bind(<http://simGen/actor/haschild> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:12,021 - Query for key :['haschild', 'skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haschild> as ?p1). bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:12,166 - Query for key :['iscitizenof', 'ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/iscitizenof> as ?p1). bind(<http://simGen/actor/ismarriedto-inv> as ?p2). ?e ?p1 ?v1. ?e ?p2 ?v2.  } limit 100000
INFO 2023-09-04 11:59:12,176 - Query for key :['iscitizenof', 'wasbornin', 'wasbornonyear'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/iscitizenof> as ?p1). bind(<http://simGen/actor/wasbornin> as ?p2). bind(<http://simGen/actor/wasbornonyear> as ?p3). ?e ?p1 ?v1. ?e ?p2 ?v2. ?e ?p3 ?v3.  } limit 100000
INFO 2023-09-04 11:59:12,314 - Query for key :['directed'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/directed> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:59:12,327 - Query for key :['ismarriedto'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/ismarriedto> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:59:12,341 - Query for key :['created'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/created> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:59:12,371 - Query for key :['actedin'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/actedin> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:59:12,445 - Query for key :['ismarriedto-inv'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/ismarriedto-inv> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:59:12,453 - Query for key :['wasbornondate'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/wasbornondate> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:59:12,488 - Query for key :['diedin'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedin> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:59:12,510 - Query for key :['haschild'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haschild> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:59:12,517 - Query for key :['skos:preflabel'], sparql : select distinct (count(?e) as ?c) where { bind(<http://www.w3.org/2004/02/skos/core#preflabel> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:59:12,588 - Query for key :['influences'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/influences> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:59:12,594 - Query for key :['haswonprize'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/haswonprize> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:59:12,604 - Query for key :['diedonyear'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedonyear> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:59:12,628 - Query for key :['diedondate'], sparql : select distinct (count(?e) as ?c) where { bind(<http://simGen/actor/diedondate> as ?p1). ?e ?p1 ?v1.  } limit 100000
INFO 2023-09-04 11:59:12,646 - valid key list : [['haschild', 'wasbornondate'], ['wasbornondate', 'ismarriedto-inv'], ['wasbornondate', 'directed'], ['diedondate', 'directed'], ['haschild', 'directed'], ['ismarriedto', 'influences'], ['wasbornondate', 'influences'], ['influences', 'ismarriedto-inv'], ['diedondate', 'skos:preflabel'], ['diedondate', 'influences'], ['diedondate', 'created'], ['haschild', 'ismarriedto-inv'], ['wasbornonyear', 'created', 'diedin'], ['diedondate', 'ismarriedto-inv'], ['directed', 'influences'], ['influences', 'skos:preflabel'], ['diedonyear', 'ismarriedto-inv'], ['ismarriedto-inv', 'skos:preflabel'], ['iscitizenof', 'ismarriedto'], ['wasbornondate', 'ismarriedto'], ['haschild', 'influences'], ['diedin', 'skos:preflabel'], ['created', 'skos:preflabel'], ['iscitizenof', 'diedonyear', 'actedin'], ['diedondate', 'haschild'], ['haschild', 'skos:preflabel'], ['iscitizenof', 'ismarriedto-inv'], ['iscitizenof', 'wasbornin', 'wasbornonyear'], ['directed'], ['ismarriedto'], ['created'], ['actedin'], ['ismarriedto-inv'], ['wasbornondate'], ['diedin'], ['haschild'], ['skos:preflabel'], ['influences'], ['haswonprize'], ['diedonyear'], ['diedondate']]
INFO 2023-09-04 11:59:12,646 - Unique key list find : ['haschild', 'wasbornondate', 'ismarriedto-inv', 'directed', 'diedondate', 'ismarriedto', 'influences', 'skos:preflabel', 'created', 'wasbornonyear', 'diedin', 'diedonyear', 'iscitizenof', 'actedin', 'wasbornin', 'haswonprize']
INFO 2023-09-04 11:59:26,713 - Start test loop
